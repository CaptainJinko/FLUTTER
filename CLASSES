//Dart Classes and Objecst

class Car{
  int numberOfDoors= 5;                      //property / fields   /variable
   
    void drive() {                           // function,behavoiur /method
     print('Wheels start turning ');         //function, behaviour method 
   
     } 
       
}
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 void main(){
   Human elias= Human();
   print(elias.height);
   print(elias.age);
   print(elias.name);
   
   Human jinko= Human();
   print(jinko.height);
   print(jinko.name);
   print(jinko.age);
 }

class Human{
  
  double height= 9.9;
  String name= 'Elias';
  int age=45;
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void main(){
  Human jenny = Human();
  
  print(jenny.height);
  
//   jenny.height=20; 
//   print(jenny.height);
//   print(jenny.age);
  
  Human james= Human();
  print(james.height);
  
}

class Human{
  
  double height= 15;
  int age= 0;
}
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Name parameters to make clearer. Take note of the curly braces

void main(){
   Human jenny = Human(startingHeight:15);
   print(jenny.height);
   
   Human james= Human(startingHeight:20);
   print(james.height);
   
   Human elias =Human(startingHeight:45);
   print(elias.height);
}

class Human{
  
  double height= 15;
  int age= 0;
  
  Human({double startingHeight}) {      //Constructor
    height = startingHeight;
    
  }

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Creating a method inside a class[function defined in a class is called a method ]
void main(){
   Human jenny = Human(startingHeight:15);
   print(jenny.height);
    
   jenny.talk('Why is flutter so interesting');
}

class Human{
  
  double height= 15;
  int age= 0;
  
  Human({double startingHeight}) {
    height = startingHeight;
    
  }
  void talk(String whatToSay){    constructor Take notice of the [String is works without The String declaration as well
    print(whatToSay);
  }

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
//More examples with constructors

void main() {
  Student james = Student(startingHeight: 12);
  print(james.height);

  Student john = Student(startingHeight: 26);
  print(john.height);

  Student elias = Student(startingHeight: 10);
  print(elias.height);

  Student mary = Student(startingHeight: 15);
  print(mary.height);

  print(' ');      //To separate line int between

  mary.speak('Hello boys we are becoming flutter gurus');
}

class Student {
  int age = 25;
  double height = 1.9;

  Student({double startingHeight}) {
    //constructors
    height = startingHeight;
  }
  void speak(String saySomething) {
    print(saySomething);
  }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void main(){
   Human jenny = Human(startingHeight:15);
   print(jenny.height);
    
   jenny.talk('Why is flutter so interesting');
}

class Human{
  
  double height= 15;
  int age= 0;
  
  Human({double startingHeight}) {
    height = startingHeight;
    
  }
  void talk(String whatToSay){   //Take notice with String declaration it is specific data type without is dynamic accepts all
    print(whatToSay);
  }

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void main() {
 Human jenney= Human();
  
  print(jenney.height);
  
  print(jenney.age);
  
}

class Human{
  double height = 15;
  int age=0;
} 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Tutorials

 void main(){
   
    var student1=  Student();
    print('${student1.id} and ${student1.name}');
 }

//define state(properties) of a Student 

class  Student{
  
int id;           //Instance or Field Variable, default value is null
String name;      //Instance or Field Variable, default value is null

void study(){
  
  //Your code
}

  void sleep(){
    
    //Your code
  }
 }
 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 //The below codes have variable, fields and is not null

 void main(){
   
    var student1=  Student();
    print('${student1.id} and ${student1.name}');
    
    student1.study();
    student1.sleep();
 }

//define state(properties) of a Student 

class  Student{
  
int id= 25;                 
String name = 'Elias';       

void study(){
  print('${this.name} is now stuying');
  //Your code
}

  void sleep(){
    print('${this.name} is now sleeping');
    //Your code
  }
 }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 void main(){
   
    var student1=  Student();      //One Object is reference variable
    print('${student1.id} and ${student1.name}');
   
    student1.study();
    student1.sleep();
   
    var student2= Student();   //One Object, students is reference variable 
    student2.id= 46;
    student2.name= 'Jinko';
    print('${student2.id} and ${student2.name}');
    student2.study();
    student2.sleep();
      
 }

//define state(properties) of a Student 

class  Student{
  
int id= 23;                 
String name = 'Elias';       

void study(){
  print('${this.name} is now stuying');  
}

  void sleep(){
    print('${this.name} is now sleeping');
    
  }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//INHERITANCE
//Inheritance

void main(){
  Car myNormalCar = Car();
   
   print(myNormalCar.numberOfSeat); // printing numer of seat from the field or property
   myNormalCar.drive();   //calling method to print wheels turns on the console
 
 }
 
class Car{
  int numberOfSeat= 5;
  
  void drive(){
    print('wheels turn');
  }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 void main(){
  Car myNormalCar = Car();
   
   print(myNormalCar.numberOfSeat);     // printing numer of seat from the field or property
   myNormalCar.drive();                  //calling method to print wheels turns on the console   
     
 }
 
class Car{
  int numberOfSeat= 5;
  
  void drive(){
    print('wheels turn'); 
    
    
  }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------
//ElectricCar has inheritated methods and propertie of Car 

void main(){
//   Car myNormalCar = Car();   
//    print(myNormalCar.numberOfSeat);     // printing numer of seat from the field or property 
//    myNormalCar.drive();                  //calling method to print wheels turns on the console

   
   ElectricCar myBenz = ElectricCar(); 
   myBenz.drive(); 
   print('My Benz has ${myBenz.numberOfSeat} seats');
  
 }
 
class Car{
  int numberOfSeat= 5;
  
  void drive(){
    print('wheels turn'); 
    
    
  }
}

class ElectricCar extends Car{
  
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Electric has its own funatinalities 

 void main(){
//   Car myNormalCar = Car(); 
//    print(myNormalCar.numberOfSeat);     // printing numer of seat from the field or property
//    myNormalCar.drive();                  //calling method to print wheels turns on the console
   
   ElectricCar myBenz = ElectricCar(); 
   myBenz.drive(); 
   print('My Benz has ${myBenz.numberOfSeat} seats');
   print('My Benz battery level is ${myBenz.batteryLevel} volt');
   
  
 }
 
class Car{
  int numberOfSeat= 5;
  
  void drive(){
    print('wheels turn'); 
    
  }
}

class ElectricCar extends Car{
 int batteryLevel= 125; 
}
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //Polymorphism The word polymorphism means having many forms, we method drive() in different forms
  void main(){
//   Car myNormalCar = Car();
   
//    print(myNormalCar.numberOfSeat);     // printing numer of seat from the field or property
  
//    myNormalCar.drive();                  //calling method to print wheels turns on the console
   
   ElectricCar myBenz = ElectricCar(); 
   myBenz.drive(); 
   print('My Benz has ${myBenz.numberOfSeat} seats');
   print('My Benz battery level is ${myBenz.batteryLevel} volt');
   
   LevitatingCar myMagLev= LevitatingCar();
   myMagLev.drive();
   
  
 }
 
class Car{
  int numberOfSeat= 5;
  
  void drive(){
    print('wheels turn'); 
    
    
  }
}

class ElectricCar extends Car{
 int batteryLevel= 125; 
}
  
class LevitatingCar extends Car{
  @override                                  //override the oarent behavour and provide our customised version of it
  void drive(){
    print('glide forwards');
  }
}
  

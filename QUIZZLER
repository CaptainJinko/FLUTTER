//Modularising&Organisation-Code
import 'package:flutter/material.dart';

void main() => runApp(Quizzler());

class Quizzler extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        backgroundColor: Colors.grey.shade900,
        body: SafeArea(
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: 10.0),
            child: QuizPage(),
          ),
        ),
      ),
    );
  }
}

class QuizPage extends StatefulWidget {
  @override
  _QuizPageState createState() => _QuizPageState();
}

class _QuizPageState extends State<QuizPage> {
  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: <Widget>[
        Expanded(
          flex: 5,
          child: Padding(
            padding: EdgeInsets.all(10.0),
            child: Center(
              child: Text(
                'This is where the question text will go.',
                textAlign: TextAlign.center,
                style: TextStyle(
                  fontSize: 25.0,
                  color: Colors.white,
                ),
              ),
            ),
          ),
        ),
        Expanded(
          child: Padding(
            padding: EdgeInsets.all(15.0),
            child: FlatButton(
              textColor: Colors.white,
              color: Colors.green,
              child: Text(
                'True',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 20.0,
                ),
              ),
              onPressed: () {
                //The user picked true.
              },
            ),
          ),
        ),
        Expanded(
          child: Padding(
            padding: EdgeInsets.all(15.0),
            child: FlatButton(
              color: Colors.red,
              child: Text(
                'False',
                style: TextStyle(
                  fontSize: 20.0,
                  color: Colors.white,
                ),
              ),
              onPressed: () {
                //The user picked false.
              },
            ),
          ),
        ),
        //TODO: Add a Row here as your score keeper
      ],
    );
  }
}

/*
question1: 'You can lead a cow down stairs but not up stairs.', false,
question2: 'Approximately one quarter of human bones are in the feet.', true,
question3: 'A slug\'s blood is green.', true,
*/

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Building A ScoreKeepre
//Adding Row and Icons at the end of the three Expanded widgets 

Row(
     children: <Widget>[
            Icon(
              Icons.check,
              color: Colors.green,
            ),
            Icon(
              Icons.close,
              color: Colors.red,
            ),
            Icon(
              Icons.close,
              color: Colors.red,
            ),
            Icon(
              Icons.close,
              color: Colors.red,
            ),
            Icon(
              Icons.close,
              color: Colors.red,
            ),
          ],
        )
      ],
    );
  }
}  

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Creating a list under the class _QuizPageState...List scoreKeeper =[] cut the Icons and past them into the listChange the List scoreKeeper =[] to List <Icon>scoreKeeper=[];
//doing that will give the the flexibility to add any incon esaily and fast 

List <Icon> scoreKeeper = [
    Icon(
      Icons.check,
      color: Colors.green,
    ),
    Icon(
      Icons.close,
      color: Colors.red,
    ),
    Icon(
      Icons.close,
      color: Colors.red,
    ),
    Icon(
      Icons.close,
      color: Colors.red,
    ),
    Icon(
      Icons.close,
      color: Colors.red,
    ),
  ];

//The Row with children as 

Row(
     children:scoreKeeper, //to coresponses with the above List name


//By inplanting the Icons into list scoreKeeper we can now add icons scorekeeper.add(....) into setSate method and trigger rebuild and create an Icon

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 onPressed: () {
                //The user picked true
                setState(() {
                  scoreKeeper.add(
                    Icon(
                      Icons.check,
                      color: Colors.green,
                    ),
                  );
                });

 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Geeting rid of Icons in the list and code in eg: onPressed() method List <String> questions=[] where you will inplant all the question. The text widget you qustions[0] 
//to display the question based on the their index, firts solution not a better one, because we alwaays have to enter an index before updateing the list on the screen 
//First step
Expanded(
          flex: 5,
          child: Padding(
            padding: EdgeInsets.all(10.0),
            child: Center(
              child: Text(
                questions[0],  // to get the items in the list questions[0] etc 
                textAlign: TextAlign.center,
                style: TextStyle(fontSize: 25.0, color: Colors.white),
              ),
            ),
          ),
        ),
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Second Step
class _QuizPageState extends State<QuizPage> {
  List<Icon> scoreKeeper = []; //list variable 

  List<String> questions = [                                    //list which contains the qustions list 
    'You can lead a cow down stairs but not up stairs.',
    'Approximately one quarter of human bones are in the feet.',
    'A slug\'s blood is green.'
  ];

  int questionNumber = 0;                                      // variable to track the list above 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Third Step
// to keep track of questions where we are in the list, create anohter eg: variable int questionNumber = 0; .. we have Eg:  questions[questionNumber],

 Expanded(
          flex: 5,
          child: Padding(
            padding: EdgeInsets.all(10.0),
            child: Center(
              child: Text(
                questions[questionNumber],
                textAlign: TextAlign.center,
                style: TextStyle(fontSize: 25.0, color: Colors.white),
              ),
            ),
          ),
        ),

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Forth step
//We want to increase the qustion number by one whenever a user click the FlatButton, In the onPressed method we can code qustionNumber= questionNumber+1;
// or questionNumber++; , we can print  in th console  by Eg: print(questionNumber); to proof to ourselves it increases by one 

Expanded(
          child: Padding(
            padding: EdgeInsets.all(15.0),
            child: FlatButton(
              textColor: Colors.white,
              color: Colors.green,
              child: Text(
                'True',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 20.0,
                ),
              ),
              onPressed: () {
                //The user picked true
                questionNumber++;
                print(questionNumber);
              },
            ),
          ),
        ),
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//The Fifth step is to write the code in setState((){ });  function where it can update the question list on the screen

Expanded(
          child: Padding(
            padding: EdgeInsets.all(15.0),
            child: FlatButton(
              textColor: Colors.white,
              color: Colors.green,
              child: Text(
                'True',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 20.0,
                ),
              ),
              onPressed: () {
                //The user picked true
                setState(() {
                  questionNumber++;
                });

                print(questionNumber);
              },
            ),
          ),
       ),
        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
